
(* Read a graph from a file,
 * Write a graph to a file. *)

open Graph

type path = string
type node = {id: int ; ptitnom: string}

(* We write only a string graph.
 * If necessary, use gmap (to be written by you) to prepare the input graph. *)
val write_file: path -> string graph -> unit

(** Gfile import/export **)
(* Values are read as strings. *)
val from_file: path -> string graph

val export_visible: path -> string graph -> Graph.id -> Graph.id -> unit

val export_simplified :
  string -> Tools.labels Graph.graph -> int -> int -> unit

(* The format of files is compatible with the files generated by:
   https://www-m9.ma.tum.de/graph-algorithms/flow-ford-fulkerson/index_en.html
*)

(** Affectation file import/export **)
(*import affectations as string graph*)
val import: path -> Tools.labels graph * node list 

val export2_text: path -> Tools.labels graph -> node list -> unit

val export2_visible: path -> Tools.labels graph -> node list -> unit

val export2_simplified: path -> Tools.labels graph -> node list -> unit